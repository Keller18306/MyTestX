export type RTFFonts = {
    [id: number]: number
}

export enum FontCharset {
    ANSI_CHARSET = 0,         //	ANSI	Windows - 1252
    DEFAULT_CHARSET = 1,      //	DEFAULT
    SYMBOL_CHARSET = 2,       //	SYMBOL
    MAC_CHARSET = 77,         //	MAC
    SHIFTJIS_CHARSET = 128,   //	Япония(JIS)	Windows - 932
    HANGEUL_CHARSET = 129,    //	Корея(Hangeul)	Windows - 949
    JOHAB_CHARSET = 130,      //	Корея(Johab)	Windows - 1361
    GB2312_CHARSET = 134,     //	Китайское письмо	Windows - 936
    CHINESEBIG5_CHARSET = 136,//	Китай	Windows - 950
    GREEK_CHARSET = 161,      //	Греция	Windows - 1253
    TURKISH_CHARSET = 162,    //	Турция	Windows - 1254
    VIETNAMESE_CHARSET = 163, //	Вьетнам	Windows - 1258
    HEBREW_CHARSET = 177,     //	Иврит	Windows - 1255
    ARABIC_CHARSET = 178,     //	Арабский	Windows - 1256
    BALTIC_CHARSET = 186,     //	Балтийские страны	Windows - 1257
    RUSSIAN_CHARSET = 204,    //	Кириллица	utf - 8 (Windows-1251)
    THAI_CHARSET = 222,       //	Тайланд	Windows - 874
    EASTEUROPE_CHARSET = 238, //	Восточная Европа	Windows - 1250
    OEM_CHARSET = 255         //	OEM
}

export function win1251toUTF8(char: number) {
    if (char < 128) {
        return String.fromCharCode(char)
    }

    const codes: {
        [char: number]: string
    } = {
        128: 'Ђ',
        129: 'Ѓ',
        130: '‚',
        131: 'ѓ',
        132: '„',
        133: '…',
        134: '†',
        135: '‡',
        136: '€',
        137: '‰',
        138: 'Љ',
        139: '‹',
        140: 'Њ',
        141: 'Ќ',
        142: 'Ћ',
        143: 'Џ',
        144: 'ђ',
        145: '‘',
        146: '’',
        147: '“',
        148: '”',
        149: '•',
        150: '–',
        151: '—',
        152: '', //?
        153: '™',
        154: 'љ',
        155: '›',
        156: 'њ',
        157: 'ќ',
        158: 'ћ',
        159: 'џ',
        160: '', //?
        161: 'Ў',
        162: 'ў',
        163: 'Ћ',
        164: '¤',
        165: 'Ґ',
        166: '¦',
        167: '§',
        168: 'Ё',
        169: '©',
        170: 'Є',
        171: '«',
        172: '¬',
        173: '', //?
        174: '®',
        175: 'Ї',
        176: '°',
        177: '±',
        178: 'І',
        179: 'і',
        180: 'ґ',
        181: 'µ',
        182: '¶',
        183: '·',
        184: 'ё',
        185: '№',
        186: 'є',
        187: '»',
        188: 'ј',
        189: 'Ѕ',
        190: 'ѕ',
        191: 'ї',
        192: 'А',
        193: 'Б',
        194: 'В',
        195: 'Г',
        196: 'Д',
        197: 'Е',
        198: 'Ж',
        199: 'З',
        200: 'И',
        201: 'Й',
        202: 'К',
        203: 'Л',
        204: 'М',
        205: 'Н',
        206: 'О',
        207: 'П',
        208: 'Р',
        209: 'С',
        210: 'Т',
        211: 'У',
        212: 'Ф',
        213: 'Х',
        214: 'Ц',
        215: 'Ч',
        216: 'Ш',
        217: 'Щ',
        218: 'Ъ',
        219: 'Ы',
        220: 'Ь',
        221: 'Э',
        222: 'Ю',
        223: 'Я',
        224: 'а',
        225: 'б',
        226: 'в',
        227: 'г',
        228: 'д',
        229: 'е',
        230: 'ж',
        231: 'з',
        232: 'и',
        233: 'й',
        234: 'к',
        235: 'л',
        236: 'м',
        237: 'н',
        238: 'о',
        239: 'п',
        240: 'р',
        241: 'с',
        242: 'т',
        243: 'у',
        244: 'ф',
        245: 'х',
        246: 'ц',
        247: 'ч',
        248: 'ш',
        249: 'щ',
        250: 'ъ',
        251: 'ы',
        252: 'ь',
        253: 'э',
        254: 'ю',
        255: 'я',
    }

    return codes[char]
}